{"version":3,"file":"static/js/18.89216f19.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Contact/Contact.module.css?03fd","components/Contact/Contact.jsx","webpack://react-homework-template/./src/components/FormPhoneBook/FormPhoneBook.module.css?2bb4","components/FormPhoneBook/FormPhoneBook.jsx","components/Filter/Filter.jsx","redux/contacts/selector-contacts.js","components/PageForm/PageForm.jsx","pages/PhoneBook/PhoneBook.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"block\":\"Contact_block__q6y-5\",\"button\":\"Contact_button__F+kJb\"};","import styles from './Contact.module.css';\n// import { nanoid } from 'nanoid';ASK IVAN\nconst Contact = ({ contacts, deleteContact }) => {\n  const listContacts = contacts?.map(({ number, name, id }) => (\n    // <li key={nanoid()}>ASK IVAN\n    <li key={id}>\n      {name} : {number}{' '}\n      <button\n        type=\"button\"\n        className={styles.button}\n        onClick={() => deleteContact(id)}\n      >\n        Delete\n      </button>\n    </li>\n  ));\n\n  return (\n    <div className={styles.block}>\n      <h1>Contacts</h1>\n\n      <ul>{listContacts}</ul>\n    </div>\n  );\n};\nexport default Contact;\n","// extracted by mini-css-extract-plugin\nexport default {\"baseForm\":\"FormPhoneBook_baseForm__8Mde7\",\"button\":\"FormPhoneBook_button__EewPy\",\"input\":\"FormPhoneBook_input__bjsP2\",\"inputtitle\":\"FormPhoneBook_inputtitle__jR4mA\"};","import { useState, useMemo } from 'react';\nimport styles from './FormPhoneBook.module.css';\nimport { nanoid } from 'nanoid';\nconst INITIAL_State = {\n  name: '',\n  number: '',\n};\n\nconst FormPhonebook = ({ handlerFormSPhonebook }) => {\n  const idName = useMemo(() => nanoid(), []);\n  const idNumber = useMemo(() => nanoid(), []);\n  const [state, setState] = useState(INITIAL_State);\n\n  const reset = () => {\n    setState(INITIAL_State);\n  };\n  const handlerChange = ({ target }) => {\n    const { name, value } = target;\n    setState({\n      ...state,\n      [name]: value,\n    });\n  };\n\n  const handlerFormSubmit = e => {\n    e.preventDefault();\n    handlerFormSPhonebook({ ...state });\n    reset();\n  };\n\n  const { name, number } = state;\n\n  return (\n    <form className={styles.baseForm} onSubmit={handlerFormSubmit}>\n      <h1>Phonebook</h1>\n      <label htmlFor=\"contact-name\">Name</label>\n      <input\n        id={idName}\n        value={name}\n        type=\"text\"\n        required\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        onChange={handlerChange}\n      />\n\n      <label htmlFor=\"contact-namber\">Number</label>\n      <input\n        id={idNumber}\n        value={number}\n        type=\"tel\"\n        required\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        onChange={handlerChange}\n      />\n\n      <button\n        type=\"submit\"\n        className={styles.button}\n        // onClick={console.log('click')}\n      >\n        Add contact\n      </button>\n    </form>\n  );\n};\nexport default FormPhonebook;\n\n// class FormPhonebook extends Component {\n//   idName = nanoid();\n//   idNumber = nanoid();\n\n//   state={...INITIAL_State}\n\n//   handlerFormSubmit = (e) => {\n//     e.preventDefault();\n//     this.props.handlerFormSPhonebook({...this.state})\n//     this.reset()\n//   };\n\n//   handlerChange=({target})=>{\n//     const{name,value}=target\n//     this.setState({[name]:value})\n//   }\n//   reset(){\n//     this.setState({...INITIAL_State})\n//   }\n\n//   render() {\n//     const{idName,idNumber,handlerChange,handlerFormSubmit}= this\n//     const{ name,number}=this.state\n\n//        return (\n//       <form className={styles.baseForm}  onSubmit={handlerFormSubmit}>\n//         <h1>Phonebook</h1>\n//         <label htmlFor=\"contact-name\">Name</label>\n//         <input\n//           id={idName}\n//           value={name}\n//           type=\"text\"\n//           required name=\"name\"\n//           pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//           title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n//           onChange={handlerChange}\n//         />\n\n//         <label htmlFor=\"contact-namber\">Number</label>\n//         <input\n//           id={idNumber}\n//           value={number}\n//           type=\"tel\"\n//           required name=\"number\"\n//           pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n//           title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n//           onChange={handlerChange}\n//         />\n\n//         <button type=\"submit\" className={styles.button}>\n//           Add contact\n//         </button>\n//       </form>\n//     );\n//   }\n// }\n","import styles from \"../FormPhoneBook/FormPhoneBook.module.css\"\nconst Filter =({propsFilter})=>{\n\nreturn(\n    <>\n    <h1 className={styles.inputtitle}>Find contacts by name :</h1>\n     <input onChange={propsFilter} name=\"filter\" placeholder=\"Search\" className={styles.input} />\n     </>\n  )\n}\nexport default Filter","export const getAllContacts = store => store.contacts;\n\nexport const getAllFilteredContacts = store => {\n  const{contacts, filter}=store\n  if (!filter) {\n    return contacts;\n  }\n  const filterNormalize = filter.toLowerCase();\n  const filteredContacts = contacts.filter(el => {\n    const checkedEl = el.name.toLowerCase();\n    return checkedEl.includes(filterNormalize);\n  });\n  return filteredContacts;\n}","// import { useState, useEffect } from 'react';\nimport FormPhonebook from '../FormPhoneBook/FormPhoneBook';\nimport Contact from '../Contact/Contact';\nimport Filter from '../Filter/Filter';\nimport { getAllFilteredContacts } from '../../redux/contacts/selector-contacts';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact, deleteContact } from '../../redux/contacts/contacts-slice';\nimport { setFilter } from '../../redux/filter/filter-slice';\n\nconst PageForm = () => {\n  const contactsStore = useSelector(getAllFilteredContacts);\n\n  const dispatch = useDispatch();\n\n  const handlerFormSPhonebook = data => {\n    if (checkName(data)) {\n      return alert(`${data.name} is already in the list of contacts`);\n    }\n    dispatch(addContact(data));\n  };\n\n  const checkName = data => {\n    const normalizedDataName = data.name.toLowerCase();\n    const checkContact = contactsStore?.find(el => {\n      const normalizedCurrentName = el.name.toLowerCase();\n      return normalizedDataName === normalizedCurrentName;\n    });\n    return Boolean(checkContact);\n  };\n\n  const deleteContactForm = id => {\n    console.log(id);\n    dispatch(deleteContact(id));\n  };\n\n  const propsFilter = ({ target }) => dispatch(setFilter(target.value));\n\n  return (\n    <>\n      <FormPhonebook handlerFormSPhonebook={handlerFormSPhonebook} />\n      <Contact contacts={contactsStore} deleteContact={deleteContactForm} />\n      <Filter propsFilter={propsFilter} />\n    </>\n  );\n};\nexport default PageForm;\n","import PageForm from '../../components/PageForm/PageForm';\nconst PhoheBook = () => {\n  return (\n    <div>\n      <PageForm />\n    </div>\n  );\n};\nexport default PhoheBook;\n"],"names":["_ref","contacts","deleteContact","listContacts","map","_ref2","number","name","id","_jsxs","children","_jsx","type","className","styles","onClick","INITIAL_State","handlerFormSPhonebook","idName","useMemo","nanoid","idNumber","_useState","useState","_useState2","_slicedToArray","state","setState","handlerChange","target","value","_objectSpread","_defineProperty","onSubmit","e","preventDefault","htmlFor","required","pattern","title","onChange","propsFilter","_Fragment","placeholder","getAllFilteredContacts","store","filter","filterNormalize","toLowerCase","el","includes","contactsStore","useSelector","dispatch","useDispatch","checkName","data","normalizedDataName","checkContact","find","normalizedCurrentName","Boolean","FormPhonebook","alert","concat","addContact","Contact","console","log","Filter","setFilter","PageForm"],"sourceRoot":""}